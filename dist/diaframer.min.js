/*! diaframer - v0.0.0 - 2015-08-25 copyright by Sascha HÃ¤usler */ 
(function(){var a,b,c,d,e,f,g,h,i=function(a,b){function c(){this.constructor=a}for(var d in b)j.call(b,d)&&(a[d]=b[d]);return c.prototype=b.prototype,a.prototype=new c,a.__super__=b.prototype,a},j={}.hasOwnProperty;c=function(){function a(a){this.canvas=new b(a),this.uml=null,this.example=null}return a.prototype.getUmlDrawer=function(){return null!=this.uml?this.uml:(this.uml=new h(this.canvas),this.uml)},a.prototype.getExampleDrawer=function(){return null!=this.example?this.example:(this.example=new e(this.canvas),this.example)},a}(),window.Diaframer=c,a=function(){function a(a){this.canvas=a}return a}(),e=function(a){function b(){b.__super__.constructor.apply(this,arguments)}return i(b,a),b.prototype.draw_cross=function(){return this.canvas.draw_line(new f(20,20),new f(300,300)),this.canvas.draw_line(new f(20,300),new f(300,20))},b.prototype.draw_two_connected_boxes=function(){var a,b;return a=this.canvas.draw_rectangle(new f(20,20),300,200),b=this.canvas.draw_rectangle(new f(70,320),300,200),this.canvas.connect(a,b)},b}(a),h=function(a){function b(){b.__super__.constructor.apply(this,arguments)}return i(b,a),b}(a),f=function(){function a(a,b){this.x=a,this.y=b}return a}(),b=function(){function a(a){this.canvas=a,this.context=this.canvas.getContext("2d"),this._objects=[]}return a.prototype.draw_line=function(a,b){return this.context.beginPath(),this.context.moveTo(a.x,a.y),this.context.lineTo(b.x,b.y),this.context.stroke()},a.prototype.draw_vertical_line=function(a,b){return this.draw_line(a,new f(a.x,a.y+b))},a.prototype.draw_horizontal_line=function(a,b){return this.draw_line(a,new f(a.x+b,a.y))},a.prototype.draw_rectangle=function(a,b,c){var d;return this.context.beginPath(),this.context.rect(a.x,a.y,b,c),this.context.stroke(),d=new g,d.set("left_corner",a),d.set("width",b),d.set("height",c),this._objects.push(d),d},a.prototype.connect=function(a,b){var c,d,e;return c=a.get_connection_points(),d=b.get_connection_points(),e=this.find_nearest_points(c,d),this.draw_line.apply(this,e)},a.prototype.find_nearest_points=function(a,b){var c,d,e,f,g,h,i,j,k,l,m;for(g=1e6,h=[],c=0,e=a.length;e>c;c++)for(i=a[c],d=0,f=b.length;f>d;d++)j=b[d],l=Math.abs(i.x-j.x),m=Math.abs(i.y-j.y),k=l+m,g>k&&(g=k,h=[i,j]);return h},a}(),d=function(){function a(a){this.canvas=a,this.data={}}return a.prototype.get=function(a){return this.data[a]},a.prototype.set=function(a,b){return this.data[a]=b},a.prototype.get_connection_points=function(){throw new Error("This method has to be implemented")},a.prototype.draw=function(){throw new Error("This method has to be implemented")},a}(),g=function(a){function b(){b.__super__.constructor.apply(this,arguments),this.set("left_corner",null),this.set("width",null),this.set("height",null)}return i(b,a),b.prototype.get_connection_points=function(){var a,b,c,d,e,g,h,i;return b=[],d=this.get("left_corner"),e=d.x+this.get("width")/2,i=new f(e,d.y),b.push(i),g=d.y+this.get("height")/2,h=new f(d.x+this.get("width"),g),b.push(h),a=new f(e,d.y+this.get("height")),b.push(a),c=new f(d.x,g),b.push(c),b},b.prototype.draw=function(){return this.canvas.draw_rectangle(this.get("left_corner"),this.get("width"),this.get("height"))},b}(d)}).call(this);